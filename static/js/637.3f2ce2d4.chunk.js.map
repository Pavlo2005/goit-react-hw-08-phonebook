{"version":3,"file":"static/js/637.3f2ce2d4.chunk.js","mappings":"mOAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uGAGd,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAApB,IAIGC,GAAaL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,2DACZ,SAAAE,GAAC,OAAIA,EAAEC,MAAMI,OAAOC,KAAnB,G,kICJNC,EAAaC,EAAAA,KAAaC,MAAM,CAClCC,MAAOF,EAAAA,KAAaG,SAAS,2BAC7BC,QAASJ,EAAAA,KACJK,IAAI,EAAG,cACPC,IAAI,GAAI,eACRH,SAAS,6BAGH,SAASI,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MAYjB,OACI,4BACI,mCAEA,SAAC,KAAD,CACIC,cAAe,CACXR,MAAO,GACPE,QAAS,IAEbO,iBAAkBZ,EAClBa,SAAU,SAACC,EAAQC,GApBf,IAAAC,IAqBQF,EApBpBG,QAAQC,IAAIF,GACZP,GACIU,EAAAA,EAAAA,IAAM,CACFhB,MAAOa,EAASb,MAChBiB,SAAUJ,EAASX,WAiBfU,EAAQM,WACX,EATL,UAWI,UAAC,IAAD,YACI,sCAEI,SAAC,KAAD,CAAOC,KAAK,QAAQC,KAAK,WACzB,SAAC,IAAD,CAAYA,KAAK,QAAQC,UAAU,YAEvC,wCAEI,SAAC,KAAD,CAAOF,KAAK,WAAWC,KAAK,aAC5B,SAAC,IAAD,CAAYA,KAAK,UAAUC,UAAU,YAEzC,mBAAQF,KAAK,SAAb,2BAKnB,C","sources":["components/PhoneForm/PhoneForm.styled.js","pages/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(3)};\n  max-width: 300px;\n`;\n\nexport const ErrMessage = styled(ErrorMessage)`\n  color: ${p => p.theme.colors.error};\n  font-size: 14px;\n`;","import { ErrMessage, StyledForm } from 'components/PhoneForm/PhoneForm.styled';\nimport { Formik, Field } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/operations';\nimport * as Yup from 'yup';\n\n\nconst quizSchema = Yup.object().shape({\n    email: Yup.string().required('This field is required!'),\n    pasword: Yup.string()\n        .min(8, 'Min 8 mins')\n        .max(16, 'Max 16 mins')\n        .required('This field is required!'),\n});\n\nexport default function LoginPage() {\n    const dispatch = useDispatch();\n\n    const onLogin = newLogin => {\n        console.log(newLogin);\n        dispatch(\n            logIn({\n                email: newLogin.email,\n                password: newLogin.pasword,\n            })\n        );\n    };\n\n    return (\n        <div>\n            <h2>Login</h2>\n\n            <Formik\n                initialValues={{\n                    email: '',\n                    pasword: '',\n                }}\n                validationSchema={quizSchema}\n                onSubmit={(values, actions) => {\n                    onLogin(values);\n                    actions.resetForm();\n                }}\n            >\n                <StyledForm>\n                    <label>\n                        Email\n                        <Field type=\"email\" name=\"email\" />\n                        <ErrMessage name=\"email\" component=\"div\" />\n                    </label>\n                    <label>\n                        Pasword\n                        <Field type=\"password\" name=\"pasword\" />\n                        <ErrMessage name=\"pasword\" component=\"div\" />\n                    </label>\n                    <button type=\"submit\">Log in</button>\n                </StyledForm>\n            </Formik>\n        </div>\n    );\n}"],"names":["StyledForm","styled","Form","p","theme","spacing","ErrMessage","ErrorMessage","colors","error","quizSchema","Yup","shape","email","required","pasword","min","max","LoginPage","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","actions","newLogin","console","log","logIn","password","resetForm","type","name","component"],"sourceRoot":""}