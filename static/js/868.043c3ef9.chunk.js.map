{"version":3,"file":"static/js/868.043c3ef9.chunk.js","mappings":"qaAIaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uGAGd,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAApB,IAIGC,GAAaL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,2DACZ,SAAAE,GAAC,OAAIA,EAAEC,MAAMI,OAAOC,KAAnB,IAICC,EAAcT,EAAAA,GAAAA,MAAH,+CAIXU,GAAcV,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAH,0FAEP,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAApB,IACA,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAApB,IAGNQ,GAAWZ,EAAAA,EAAAA,IAAOa,EAAAA,IAAPb,CAAH,2FAORc,GAAYd,EAAAA,EAAAA,IAAOe,EAAAA,IAAPf,CAAH,2FAOTgB,GAAShB,EAAAA,EAAAA,IAAOiB,EAAAA,IAAPjB,CAAH,2FAONkB,GAAalB,EAAAA,EAAAA,IAAOmB,EAAAA,IAAPnB,CAAH,2FAOVoB,EAAepB,EAAAA,GAAAA,OAAH,oHAIG,SAAAE,GAAC,OAAIA,EAAEC,MAAMI,OAAOc,UAAnB,G,4GCxDhBC,EAAYtB,EAAAA,GAAAA,IAAH,qFAGX,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAApB,IAGCmB,EAAevB,EAAAA,GAAAA,OAAH,6KAKD,SAAAE,GAAC,OAAIA,EAAEC,MAAMI,OAAOiB,MAAnB,IACM,SAAAtB,GAAC,OAAIA,EAAEC,MAAMI,OAAOc,UAAnB,I,6BCTnBI,EAAe,SAAC,GAMvB,IAAD,IALCC,QACEC,EAIH,EAJGA,GACAC,EAGH,EAHGA,KACAC,EAEH,EAFGA,OAGEC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,UAACT,EAAD,YACI,SAAC,MAAD,KACA,iCAAOM,EAAP,cAAiBC,MACjB,SAACN,EAAD,CAAcS,QAAS,WACnBF,GAASG,EAAAA,EAAAA,IAAeN,GAC3B,EAFD,sBAKX,ECrBYO,EAAclC,EAAAA,GAAAA,GAAH,iDAIXmC,EAAiBnC,EAAAA,GAAAA,GAAH,oD,oBCCdoC,EAAW,WACpB,IAAMC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BT,GAAWC,EAAAA,EAAAA,MAEjB,OACI,4BACI,sCAEA,mDACA,kBAAOS,KAAK,OAAOC,SAAU,SAAAC,GAAG,OAAIZ,GAASa,EAAAA,EAAAA,GAAaD,EAAIE,OAAOC,OAArC,KAEhC,SAACX,EAAD,UACKG,EAAYS,KAAI,SAAApB,GAAO,OACpB,SAACS,EAAD,WACI,SAACV,EAAD,CAAcC,QAASA,KADNA,EAAQC,GADT,QASvC,E,kDCpBKoB,EAAaC,EAAAA,KAAaC,MAAM,CAClCrB,KAAMoB,EAAAA,KAAaE,IAAI,EAAG,cAAcC,SAAS,2BACjDtB,OAAQmB,EAAAA,KACHE,IAAI,EAAG,cACPE,IAAI,GAAI,eACRD,SAAS,6BAGLE,EAAY,WAErB,IAAMvB,GAAWC,EAAAA,EAAAA,MACXuB,GAAWhB,EAAAA,EAAAA,IAAYiB,EAAAA,IAW7B,OACI,4BACI,uCAEA,SAAC,KAAD,CACIC,cAAe,CACX5B,KAAM,GACNC,OAAQ,IAEZ4B,iBAAkBV,EAClBW,SAAU,SAACC,EAAQC,GAnBZ,IAAAC,IAoBQF,EAnBnBL,EAASQ,MAAK,SAAApC,GAAO,OAAIA,EAAQE,OAASiC,EAASjC,IAA9B,IACrBmC,MAAM,GAAD,OAAIF,EAASjC,KAAb,2BAGLE,GAASkC,EAAAA,EAAAA,KAAY,kBAAKH,GAAN,IAAgBlC,IAAIsC,EAAAA,EAAAA,UAgBhCL,EAAQM,WACX,EATL,UAWI,UAAC,KAAD,YACI,UAAC,KAAD,mBAEI,SAAC,KAAD,KACA,SAAC,KAAD,CAAatC,KAAK,UAClB,SAAC,KAAD,CAAYA,KAAK,OAAOuC,UAAU,YAEtC,UAAC,KAAD,qBAEI,SAAC,KAAD,KACA,SAAC,KAAD,CAAa3B,KAAK,QAAQZ,KAAK,YAC/B,SAAC,KAAD,CAAYA,KAAK,SAASuC,UAAU,YAExC,SAAC,KAAD,CAAc3B,KAAK,SAAnB,gCAKnB,E,UCzDc,SAAS4B,IACpB,IAAMtC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAsC,EAAAA,EAAAA,YAAU,WACNvC,GAASwC,EAAAA,EAAAA,MACZ,GAAE,CAACxC,KAGA,4BACI,SAACuB,EAAD,KACA,SAACjB,EAAD,MAGX,C","sources":["components/PhoneForm/PhoneForm.styled.js","components/ContactsCard/ContactsCard.styled.js","components/ContactsCard/ContactsCard.jsx","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx","components/PhoneForm/PhoneForm.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, ErrorMessage, Field } from 'formik';\nimport { FaAt, FaPhone,FaUnlock,FaUser } from \"react-icons/fa\";\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(3)};\n  max-width: 300px;\n`;\n\nexport const ErrMessage = styled(ErrorMessage)`\n  color: ${p => p.theme.colors.error};\n  font-size: 14px;\n`;\n\nexport const StyledLabel = styled.label`\n  position: relative;\n`\n\nexport const StyledField = styled(Field)`\n  border-radius: 5px;\n  margin-left: ${p => p.theme.spacing(2)};\n  padding-left: ${p => p.theme.spacing(6)};\n`\n\nexport const IconUser = styled(FaUser)`\n  position: absolute;\n  width: 16px;\n  top: 4px;\n  left: 56px;\n`\n\nexport const IconPhone = styled(FaPhone)`\n  position: absolute;\n  width: 16px;\n  top: 4px;\n  left: 72px;\n`\n\nexport const IconAt = styled(FaAt)`\n  position: absolute;\n  width: 16px;\n  top: 4px;\n  left: 52px;\n`\n\nexport const IconUnlock = styled(FaUnlock)`\n  position: absolute;\n  width: 16px;\n  top: 4px;\n  left: 80px;\n`\n\nexport const SubmitButton = styled.button`\n  border-radius: 5px;\n  padding: 4px;\n  cursor: pointer;\n  box-shadow: 4px 4px 8px ${p => p.theme.colors.grayShadow};\n`","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    align-items: center;\n    gap: ${p => p.theme.spacing(4)};\n`\n\nexport const DeleteButton = styled.button`\n    width: 120px;\n    height: 36px;\n    cursor: pointer;\n    border-radius: 10px;\n    background-color: ${p => p.theme.colors.delete};\n    box-shadow: 5px 5px 10px ${p => p.theme.colors.grayShadow};\n`","import { deleteContacts } from \"redux/contacts\";\nimport { DeleteButton, Container } from \"./ContactsCard.styled\";\nimport { useDispatch } from \"react-redux\";\nimport { FaPhone } from \"react-icons/fa\";\n\nexport const ContactsCard = (\n    { contact: {\n        id,\n        name,\n        number\n    } }\n) => {\n    const dispatch = useDispatch();\n\n    return (\n        <Container>\n            <FaPhone/>\n            <p>{`${name}: +${number}`}</p>\n            <DeleteButton onClick={() => {\n                dispatch(deleteContacts(id))\n            }}>Delete</DeleteButton>\n        </Container>\n    );\n}","import styled from 'styled-components';\n\nexport const ContactList = styled.ul`\n    padding-left: 20px;\n`\n\nexport const ContactElement = styled.li`\n    list-style-type: none;\n`","import { ContactsCard } from \"components/ContactsCard/ContactsCard\";\nimport { ContactElement, ContactList } from \"./Contacts.styled\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from \"redux/filterSlice\";\nimport { valueCurentContacts } from \"redux/selectors\";\n\n\nexport const Contacts = () => {\n    const newContacts = useSelector(valueCurentContacts);\n    const dispatch = useDispatch();\n\n    return (\n        <div>\n            <h2>Contacts</h2>\n\n            <h3>Find contacts by name</h3>\n            <input type=\"text\" onChange={evt => dispatch(changeFilter(evt.target.value))} />\n\n            <ContactList>\n                {newContacts.map(contact => (\n                    <ContactElement key={contact.id}>\n                        <ContactsCard contact={contact}></ContactsCard>\n                    </ContactElement>\n                ))}\n            </ContactList>\n        </div>\n    );\n\n}","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { ErrMessage, IconPhone, IconUser, StyledField, StyledForm, StyledLabel, SubmitButton } from './PhoneForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { valueContacts } from 'redux/selectors';\nimport { addContacts } from 'redux/contacts';\n\nconst quizSchema = Yup.object().shape({\n    name: Yup.string().min(3, 'Too short!').required('This field is required!'),\n    number: Yup.string()\n        .min(8, 'Min 8 mins')\n        .max(16, 'Max 16 mins')\n        .required('This field is required!'),\n});\n\nexport const PhoneForm = () => {\n\n    const dispatch = useDispatch();\n    const contacts = useSelector(valueContacts)\n\n    const onAddPhone = newPhone => {\n        if (contacts.find(contact => contact.name === newPhone.name)) {\n            alert(`${newPhone.name} is Olredy in contacts`)\n        }\n        else {\n            dispatch(addContacts({ ...newPhone, id: nanoid() }))\n        }\n    };\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n\n            <Formik\n                initialValues={{\n                    name: '',\n                    number: '',\n                }}\n                validationSchema={quizSchema}\n                onSubmit={(values, actions) => {\n                    onAddPhone(values);\n                    actions.resetForm();\n                }}\n            >\n                <StyledForm>\n                    <StyledLabel>\n                        Name\n                        <IconUser/>\n                        <StyledField name=\"name\"/>\n                        <ErrMessage name=\"name\" component=\"div\" />\n                    </StyledLabel>\n                    <StyledLabel>\n                        Number\n                        <IconPhone/>\n                        <StyledField type=\"numer\" name=\"number\" />\n                        <ErrMessage name=\"number\" component=\"div\" />\n                    </StyledLabel>\n                    <SubmitButton type=\"submit\">Add contact</SubmitButton>\n                </StyledForm>\n            </Formik>\n        </div>\n    );\n};","import { Contacts } from \"components/Contacts/Contacts\";\nimport { PhoneForm } from \"components/PhoneForm/PhoneForm\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts\";\n\nexport default function ContactsPage() {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <div>\n            <PhoneForm />\n            <Contacts></Contacts>\n        </div>\n    );\n}"],"names":["StyledForm","styled","Form","p","theme","spacing","ErrMessage","ErrorMessage","colors","error","StyledLabel","StyledField","Field","IconUser","FaUser","IconPhone","FaPhone","IconAt","FaAt","IconUnlock","FaUnlock","SubmitButton","grayShadow","Container","DeleteButton","delete","ContactsCard","contact","id","name","number","dispatch","useDispatch","onClick","deleteContacts","ContactList","ContactElement","Contacts","newContacts","useSelector","valueCurentContacts","type","onChange","evt","changeFilter","target","value","map","quizSchema","Yup","shape","min","required","max","PhoneForm","contacts","valueContacts","initialValues","validationSchema","onSubmit","values","actions","newPhone","find","alert","addContacts","nanoid","resetForm","component","ContactsPage","useEffect","fetchContacts"],"sourceRoot":""}